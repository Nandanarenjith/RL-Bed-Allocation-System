Subtask:
Engineer new features from the cleaned dataset to improve the performance of the RL model.
import pandas as pd

# 1. Length of Stay
df['Date of Admission'] = pd.to_datetime(df['Date of Admission'])
df['Discharge Date'] = pd.to_datetime(df['Discharge Date'])
df['Length_of_Stay'] = (df['Discharge Date'] - df['Date of Admission']).dt.days

# 2. Severity Score
def calculate_severity_score(row):
    medical_condition_weights = {'cancer': 0.8, 'obesity': 0.3, 'heart disease': 0.9, 'asthma': 0.2}
    admission_type_weights = {'emergency': 0.7, 'urgent': 0.5, 'elective': 0.2}

    medical_weight = medical_condition_weights.get(row['Medical Condition'].lower(), 0.5)  # Default weight
    admission_weight = admission_type_weights.get(row['Admission Type'].lower(), 0.4)      # Default weight
    billing_weight = row['Billing Amount'] / 10000  # Normalize billing

    severity_score = 0.4 * medical_weight + 0.4 * admission_weight + 0.2 * billing_weight
    return severity_score

df['Severity_Score'] = df.apply(calculate_severity_score, axis=1)

# 3. One-Hot Encoding
categorical_cols = ['Gender', 'Medical Condition', 'Admission Type']
df = pd.get_dummies(df, columns=categorical_cols, drop_first=True)

# 4. Additional Feature: Age Group
bins = [0, 18, 35, 60, 120]
labels = ['Child', 'Young Adult', 'Adult', 'Senior']
df['Age_Group'] = pd.cut(df['Age'], bins=bins, labels=labels, right=False)
df = pd.get_dummies(df, columns=['Age_Group'], drop_first=True)

display(df.head())
